{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Cochin;\f1\fnil\fcharset134 STSongti-SC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\info
{\author Jason Levine}}\paperw12240\paperh15840\margl1440\margr1440\vieww12540\viewh14500\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 REVIEW - VECTORS\
\
Vectors let us store a list a variables.  The variables are all of the same type\
\
We declare a vector like this:\
vector<
\i type
\i0 > myVector;\
\
type can be basic variables like 
\b int
\b0 , 
\b float
\b0 , or 
\b string
\b0 .\
\
they can also be built in OF objects like 
\b ofColor
\b0  or 
\b ofPoint\

\b0 \
they can also be objects of classes that we make like 
\b particle\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\b0 You can add an element to a vector with the 
\b push_back
\b0  function like this.\
\
vector<int> myIntVector; //declare just ONCE. \
myIntVector.push_back(5); //Now we have a list with one element in it (5) \
myIntVector.push_back(2); //Now we have a list with two elements in it (5,2)\
myIntVector.push_back(10); //Now we have a list with three elements in it (5,2,10)\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
You can find out how many elements are in a vector with the 
\b size
\b0  function\
\
If we write:\
\
cout << myIntVector.size() << endl;\
It with print out: 3\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
We can access or change an element of list using 
\b []\

\b0 So:\
cout << myIntVector[1] << endl;\
It will print out: 2\
\
\
If we do:\
\
myIntVector[0] = 19;\
Now our list is (19, 2, 10)\
\
If we do:\
 myIntVector[2] = myIntVector[2] + 2;\
Now our list is (19,2,12)\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Since we know the size of the vector, we can use a 
\b for loop
\b0  to go through all the elements\
\
This loop adds 1 to every element in our list:\
\
for (int i = 0; i < myIntVector.size(); i++)\{\
	myIntVector[i] = myIntVector[i] + 1;\
\}\
\
This loop doubles every element in our list:\
\
for (int i = 0; i < myIntVector.size(); i++)\{\
	myIntVector[i] = myIntVector[i] * 2;\
\}\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
To delete the first element of a vector we can do:\
myIntVector.erase(myIntVector.begin());\
\
Now our list is (2, 12)\
\
To delete a specific element of a vector we can do:\
\
int elementToDelete = 1;\
myIntVector.erase(myIntVector.begin()+elementToDelete);\
\
Now our list is just (2)\
\
To delete every element in a list we use the 
\b clear
\b0  function like this:\
myIntVector.clear()\
\

\f1 \
\
\
\
\
\
\
\
\
\
\
\
\
\

\f0 \

\f1 \'bf\'ce\'b3\'cc\'bb\'d8\'b9\'cb \'a3\'adVECTORS
\f0 \
\
Vectors 
\f1 \'c8\'c3\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'b4\'e6\'b4\'a2\'d2\'bb\'d5\'c5
\f0 variables
\f1 \'b5\'c4\'c1\'d0\'b1\'ed\'a1\'a3\'d5\'e2\'d0\'a9
\f0 variables
\f1 \'b6\'bc\'ca\'c7\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'a1\'a3
\f0 \
\

\f1 \'ce\'d2\'c3\'c7\'ca\'c7\'d5\'e2\'d1\'f9\'c9\'f9\'c3\'f7\'d2\'bb\'b8\'f6vector\'b5\'c4\'a3\'ba
\f0 \
vector<
\i type
\i0 > myVector;\
\

\f1 \'c0\'e0\'d0\'cd\'bf\'c9\'d2\'d4\'ca\'c7
\f0 int
\f1 \'a3\'ac
\f0 float
\f1 \'a3\'ac\'bb\'f2\'d5\'df\'ca\'c7
\f0 string.\
\

\f1 \'cb\'fb\'c3\'c7\'bf\'c9\'d2\'d4\'ca\'c7
\f0 OF
\f1 \'d7\'d4\'b4\'f8\'b5\'c4\'b6\'d4\'cf\'f3\'a3\'ac\'cf\'f1ofColor\'bb\'f2\'d5\'dfofPoint\

\f0 \

\f1\b \'cb\'fb\'c3\'c7\'d2\'b2\'bf\'c9\'d2\'d4\'ca\'c7\'c0\'e0\'b5\'c4\'b6\'d4\'cf\'f3\'a3\'a8
\f0\b0 objects of classes 
\f1\b \'a3\'a9\'a3\'ac\'be\'cd\'cf\'f1\'ce\'d2\'c3\'c7\'d7\'f6\'b5\'c4particle\'d2\'bb\'d1\'f9\'a1\'a3
\f0 \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f1\b0 \'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3push_back\'b9\'a6\'c4\'dc\'a3\'ac\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'d0\'c2\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'bdvector\'c0\'ef\'c3\'e6\'a1\'a3\

\f0 \
vector<int> myIntVector; //
\f1 \'d6\'bb\'d0\'e8\'d2\'aa\'c9\'f9\'c3\'f7\'d2\'bb\'b4\'ce
\f0 \
myIntVector.push_back(5); //
\f1 \'cf\'d6\'d4\'da\'ce\'d2\'c3\'c7\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'b5\'bd\'c1\'d0\'b1\'ed\'a3\'a85\'a3\'a9
\f0  \
myIntVector.push_back(2); //
\f1 \'cf\'d6\'d4\'da\'ce\'d2\'c3\'c7\'b5\'c4\'c1\'d0\'b1\'ed\'d3\'d0\'c1\'bd\'b8\'f6\'d4\'aa\'cb\'d8\'a3\'ac\'cb\'fc\'c3\'c7\'ca\'c7\'a3\'a85\'a3\'ac2\'a3\'a9
\f0 \
myIntVector.push_back(10); 
\f1 //\'cf\'d6\'d4\'da\'ce\'d2\'c3\'c7\'b5\'c4\'c1\'d0\'b1\'ed\'d3\'d0\'c8\'fd\'b8\'f6\'d4\'aa\'cb\'d8\'a3\'ac\'cb\'fc\'c3\'c7\'ca\'c7\'a3\'a85\'a3\'ac2\'a3\'ac10\'a3\'a9
\f0 \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f1 \'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3
\f0 size
\f1 \'b7\'bd\'b7\'a8\'d5\'d2\'d4\'da\'d2\'bb\'b8\'f6
\f0 vector
\f1 \'c0\'ef\'c3\'e6\'d3\'d0\'b6\'e0\'c9\'d9\'d4\'aa\'cb\'d8\

\f0 \

\f1 \'c8\'e7\'b9\'fb\'ce\'d2\'c3\'c7\'d0\'b4\'a3\'ba
\f0 \
\
cout << myIntVector.size() << endl;\

\f1 \'cb\'fc\'bb\'e1\'ca\'e4\'b3\'f6\'a3\'ba
\f0 3\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f1\b \'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3
\f0\b0  
\b []
\f1 \'b7\'c3\'ce\'ca\'bb\'f2\'d0\'de\'b8\'c4\'c1\'d0\'b1\'ed\'d6\'d0\'b5\'c4\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8
\f0 \

\f1\b0 \'c8\'e7\'a3\'ba
\f0 \
cout << myIntVector[1] << endl;\
It will print out: 2\
\
\

\f1 \'c8\'e7\'b9\'fb\'ce\'d2\'c3\'c7\'c8\'e7\'cf\'c2\'b2\'d9\'d7\'f7\'a3\'ba
\f0 \
\
myIntVector[0] = 19;\
Now our list is (19, 2, 10)\
\

\f1 \'c8\'e7\'b9\'fb\'ce\'d2\'c3\'c7\'b2\'d9\'d7\'f7\'a3\'ba
\f0 \
myIntVector[2] = myIntVector[2] + 2;\
Now our list is (19,2,12)\

\f1 \

\f0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f1 \'d2\'f2\'ce\'aa\'ce\'d2\'c3\'c7\'d6\'aa\'b5\'c0
\f0 vector
\f1 \'b5\'c4size\'a3\'ac\'cb\'f9\'d2\'d4\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'d3\'c3for loop\'b7\'c3\'ce\'ca\'c3\'bf\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\

\f0 \

\f1 \'d5\'e2\'b8\'f6loop\'ca\'b9\'c1\'d0\'b1\'ed\'d6\'d0\'b5\'c4\'c3\'bf\'b8\'f6\'d4\'aa\'cb\'d8\'bc\'d31
\f0 \
\
for (int i = 0; i < myIntVector.size(); i++)\{\
	myIntVector[i] = myIntVector[i] + 1;\
\}\
\

\f1 \'d5\'e2\'b8\'f6
\f0 loop
\f1 \'c8\'c3\'c3\'bf\'b8\'f6\'d4\'aa\'cb\'d8\'b6\'bc\'b7\'ad\'b1\'b6
\f0 \
\
for (int i = 0; i < myIntVector.size(); i++)\{\
	myIntVector[i] = myIntVector[i] * 2;\
\}\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\

\f1 \'c9\'be\'b3\'fdvector\'d6\'d0\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'a3\'ac\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'a3\'ba
\f0 \
myIntVector.erase(myIntVector.begin());\
\
Now our list is (2, 12)\
\

\f1 \'c8\'a5\'c9\'be\'b3\'fd
\f0 vector
\f1 \'d6\'d0\'b5\'c4\'d2\'bb\'b8\'f6\'cc\'d8\'ca\'e2\'d4\'aa\'cb\'d8\'a3\'ac\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'a3\'ba\

\f0 \
int elementToDelete = 1;\
myIntVector.erase(myIntVector.begin()+elementToDelete);\
\
Now our list is just (2)\
\

\f1 \'c9\'be\'b3\'fd\'d5\'fb\'b8\'f6\'c1\'d0\'b1\'ed\'a3\'ac\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3clear\'b9\'a6\'c4\'dc\'a3\'ba
\f0 \
myIntVector.clear()\
}